# yamllint disable rule:line-length
name: Weekly CI trigger
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 6'
env:
  BRANCH_NAME: "weekly-ci"
  COMMIT_MESSAGE: "Weekly CI check"
jobs:
  weekly_ci:
    runs-on: ubuntu-latest
    steps:
      - name: Delete the previous branch if exists
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: "heads/${{ env.BRANCH_NAME }}",
            });
            console.log("here will be log");
            console.log(response);
            for (ref in response.data){
              if (response.data[ref].ref == "refs/head/${{ env.BRANCH_NAME }}"){
                console.log("deleting branch");
                console.log(response.data[ref]);
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: "head/${{ env.BRANCH_NAME }}",
                });
              }
            }

#     - name: Create new branch
#       uses: actions/github-script@v6
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           const { BRANCH_NAME, COMMIT_MESSAGE } = process.env
#           github.rest.git.createRef({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             ref: 'refs/head/${{ env.BRANCH_NAME }}',
#             sha: context.sha
#           })

#     - name: Checkout created branch
#       uses: actions/checkout@v3
#       with:
#         fetch-depth: 0
#         ref: ${{ env.BRANCH_NAME }}

      - name: Create and push empty commit
        shell: bash
        run: |
          set -euxo pipefail
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b weekly-ci
          git commit --allow-empty -m "${{ env.COMMIT_MESSAGE }}"
          git push

      - name: Create pull request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { BRANCH_NAME, COMMIT_MESSAGE } = process.env
            github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '${{ env.COMMIT_MESSAGE }}',
              head: '${{ env.BRANCH_NAME }}',
              base: context.ref
            })
